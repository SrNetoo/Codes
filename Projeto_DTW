
#include "stdio.h"
#include "stdlib.h"
#include "time.h"


double acertos=0;
double erros=0;
int indice=0;
int colunastotal;
//int u=0;
int m=100;
//int n=100;
//int a,b=0;
//int aux=-1;
//int aux2=-1;
//int kvalor=1 // k valores, assumindo 1 / 2 / 3 / 5 / 10 / 20

double MatrizA[1000][1000];
double MatrizB[1000][1000];

//double MatrizA = LerTeste;
//double MatrizB = LerTreino;

int kmov[1500][1500]; // guardarei as classificacoes dos valores d k
//double k[100][100]; // guardarei os valores de k




double DTW[1500][1500];
double k[1500][1500];


//ok
int comparando(int q, int s){

	int vetorkvalores[13];
	for(int l=0; l<=12 ; l++){
	vetorkvalores[l]=0;
	}
	
	//printf("okaqui\n");
	//calculo da moda
	for(int i=0;i<q;i++){
	
		for(int j=0; j<=12;j++){
		
			//printf("\n\n\n\nkmov[%d][%d]:%d\n",s,i,kmov[s][i] );
			if(kmov[s][i]==j){//um vetor cm valores de 1 à 12, sempre o nmero aparecer no kmov eu acresento 1, dps vejo qual casa do vetor tem maior valor, aparece mais, eh a moda
				
				vetorkvalores[j]++;
			}
			

		}
	}
	//printf("ok2aqui\n");
	

	int indice=0;
	int max=0;


	for(int i=0;i<=12;i++){

		if(vetorkvalores[i]>max){
			max=vetorkvalores[i];
			indice=i;
		}

	}
	
	printf("vetor[%d]=%d\n",indice,vetorkvalores[indice]);

	for(int z=0;z<=12;z++){
		//printf("\nkvalores%d\n",vetorkvalores[z] );
		if((vetorkvalores[z]==max && z != indice)&& max != 0){
			printf("fudeo..\n");
			comparando(q+1,s);
			return 0;

		}

	}
	
	

	if(indice == MatrizA[s][0]){
		acertos++;
		return 0;
	}
	else{
		erros++;
		return 0;
	}



}



//ok
double ordenar_classificar(){

	//ORDENANDO
	//int u=0;
	int t=0;
	int n=0;
	int p=0;
	double aux1=0;
	double aux2=0;
	int kvalor=1; // k valores, assumindo 1 / 2 / 3 / 5 / 10 / 20
	//printf("ok1\n");
	for(int u=0;u<colunastotal;u++){ // aqui vai ser sempre zero, le todo o arquivo
		//printf("proximo vetor\n");
		//printf("ok1\n");
		//while(k[u][t] != -1){ //contando o tamanho da linha
		//	n++; //tamanho da linha
		//	t++; //passa pra próxima coluna ateh acabar a linha k== -1
		//}

		while(0<1){
			if(k[u][t]==-1 ){
				break;
			}
			t++;
		}



		//printf("Linhas %d\n",);
		//printf("ok2\n");
		for(int i=0;i<t;i++){
			for(int j=i+1; j<t; ++j){
				
			
					if(k[u][i]>k[u][j] ){
				//printf("k[%d][%d]=%d\n",u,i,kmov[u][i] );
				//printf("k[%d][%d]=%d\n",u,j,kmov[u][j] );
				
					aux1=k[u][i];
					k[u][i]=k[u][j];
					k[u][j]=aux1;

					//printf("k[%d][%d]=%lf\n",u,i,k[u][i] );
					//printf("k[%d][%d]=%lf\n",u,j,k[u][j] );
					aux2=kmov[u][i];
					kmov[u][i]=kmov[u][j];
					kmov[u][j]=aux2;
				//printf("k[%d][%d]=%d\n",u,i,kmov[u][i] );
				//printf("k[%d][%d]=%d\n",u,j,kmov[u][j] );
				
					}

				
			}
		
		}
		p++;
		//n=0; // volta pra cond inicial
		t=0; //volta pra cond inicial
		//u++; //passa pra proxima linha,prox vetor

	}
				printf("k[%d][%d]=%lf\n",27,35,k[27][35] );
				printf("k2[%d][%d]=%lf\n\n",27,36,k[27][36] );
				printf("k[%d][%d]=%lf\n",27,37,k[27][37] );
				printf("k2[%d][%d]=%lf\n\n",27,38,k[27][38] );
	//printf("MatrizA %lf\n",MatrizA[u][t] );
	//agora tenho todos meus k vetores ordenados
	//COMPARANDO
	printf("k[%d][%d]=%d\n",0,0,kmov[0][0] );
	int colunas=0;
	printf("k[%d][%d]=%d\ncolunas=%d\n",0,0,kmov[125][0],colunas );	
	

	for(int i=0;i<50;i++){
		for(int j=0;j<50;j++){
			printf("kmov[%d][%d]=%d ",i,j,kmov[i][j]);
		}
		printf("\n");
	}

	for(int i=0;i<50;i++){
		for(int j=0;j<50;j++){
			printf("k[%d][%d]=%lf ",i,j,k[i][j]);
		}
		printf("\n");
	}


	while(colunas<p){
		//printf("calculando acertos...\n");
		comparando(kvalor,colunas);
		colunas++;
	}

	double taxafinal = acertos/colunastotal;

	printf("taxa %lf\n", taxafinal );
	printf("acertos %lf\n",acertos );
	printf("%lf\n",erros);
	printf("%d\n",colunastotal );

	return taxafinal;


}

//ok
int inteiro_teste(double t){
	int x;
	double n;
	n=(int)t;

	if (n==t){
		x=1;
	}
	else{
		x=0;
	}
	return x; //ok

}

//ok
double custolocal(int A, int B, int X, int Y){
	double custo;

	if(MatrizA[X][A]>MatrizB[Y][B]){                 // pra nao precisar de raiz quadrada eu vejo quem eh o maior antes de achar a diferença pra ela ja sair em modulo
		custo= MatrizA[X][A] - MatrizB[Y][B];      // ao inves d vetores eu coloco as linhas das matrizes formadas pelos dados dos arquivos
	}
	else{
		custo=MatrizB[Y][B] - MatrizA[X][A];
	}

	return custo;
	
}


//ok
double minimo(double aa, double bb, double cc){
	double min;
	if (aa<bb){
	if(bb<cc){
		min=aa;
	}
	else{
		if(aa<cc){
			min=aa;
		}

			else{
				min=cc;
				}
			
		}
	}

	else{
		if(aa<cc){
			min=bb;
		}
			else{
				if(bb<cc){
					min=bb;
				}
						else{
							min=cc;
						}
			}

	}

	return min;

}

//ok
void dtw(){ // Vetor A = i posiçoes, vetor a ser analisado. Vetor B = j posiçoes, vetor exemplo para comparaçao
	int a,b;
	int x = 0;
		int y = 0;
		while(MatrizA[x][0] != -1){ // isso eh pra ele ir descendo nas linhas da matriz, ou seja ir passando de vetor e ele para quando o primeiro valor for zero, pq antes d preencher a matriz vou zerar ela
    	
    	while(MatrizB[y][0] != -1){
    		

			for( a=1; MatrizA[x][a] !=-1; a++){ //a e b == 1 pq os valores da posicao 0 sao as classificacoes dos movimentos

				for( b=1; MatrizB[y][b] != -1; b++){
					
					double c = custolocal(a,b,x,y);
					
						if(a!=1 && b!=1){
						DTW[a][b]= c + minimo(DTW[a-1][b-1],DTW[a-1][b], DTW[a][b-1]);
					}

					if(a==1 && b!=1){       // nesse caso nao tem valores para a-1 , entao nem preciso comparalos
						DTW[a][b]= c + DTW[a][b-1];

					}

					if(a!=1 && b==1 ){
						DTW[a][b]= c + DTW[a-1][b]; // nesse caso nao tem valores para b-1, enta nao preciso comparalos
					}
		  
					if(a==1 && b==1){   // nesse caso noa tem valores nem pra a-1 nem pra b-1 entao o valor e o proprio c
						DTW[a][b]= c ;
					}
					
								
				}
			
			//printf("DTW %lf\n",DTW[a][b] );	
			}
			//printf("DTW %lf\n",DTW[a-1][b-1] );
			k[x][y] = DTW[a-1][b-1]; // guardo o ultimo valor da matriz numa matriz que guarda todos os k
			kmov[x][y] = MatrizB[y][0];  //guardo o valor da classificaçao do movimento
			//printf("%lf\n",k[x][y] );
			//printf("kmov[%d][%d]=%d\n",x,y,kmov[x][y] );
			y++; //Aqui eu mudo a linha do vetor B q sao meus exemplos
		}
		//printf("%d\n",y );
		y=0; //Reseto a coluna
		//printf("%d\n",x );
		x++; //Aqui eu mudo a linha do vetor A q é o vetor a ser analisado
		colunastotal=x;
	}
	
} 



//ok
void LerTeste (){

	int aux;
	for(int i=0; i<1000 ; i++){        // 'zero' a matriz dando pra ela o valor de -1
		for(int j=0; j<1000 ; j++ ){
			MatrizA[i][j]=-1; 
		}
	}
	

	FILE *arq;

	arq = fopen("/home/neto/N/USP/Codigos_Alg/Projeto_2018/base de dados/teste.txt", "r");
	int f=0;
	int g=0;
	// MANEIRA 2 acho q vai ser essa
	while (!feof(arq)){ // talvez tenha q ser um for(for m<nmero maximo de linhas) aqui, n sei se ele le o arquivo sempre q volta aqui, ou se ele le tudo de uma vez 

		fscanf(arq, "%lf", &MatrizA[f][g]);
		
		if(f != 0 || g != 0){
			if(MatrizA[f][0]<=2){
			if (inteiro_teste(MatrizA[f][g]) == 1){ // se o nmero for inteiro ele ja vai estar no fim da linha m, oq ta errado pq ele tem q estar no comeco do vetor, ja que inteiro significa novo vetor
				aux = MatrizA[f][g]; // guardo esse valor inteiro colocado errado
				MatrizA[f][g] = -1; // zero o valor nessa posiçao
				f++; // arrumo a linha
				g=0; // arrumo a coluna
				MatrizA[f][g] = aux; // ponho o valor no lugar certo
			}
		}
		else{

			if (inteiro_teste(MatrizA[f][g]) == 1 && MatrizA[f][g]>2){ // se o nmero for inteiro ele ja vai estar no fim da linha m, oq ta errado pq ele tem q estar no comeco do vetor, ja que inteiro significa novo vetor
				aux = MatrizA[f][g]; // guardo esse valor inteiro colocado errado
				MatrizA[f][g] = -1; // zero o valor nessa posiçao
				f++; // arrumo a linha
				g=0; // arrumo a coluna
				MatrizA[f][g] = aux; // ponho o valor no lugar certo
			}

		}
		}

			g++;
		
	
		}	

		fclose(arq);

		

}

//ok
void LerTreino (){

	int aux;
	for(int i=0; i<1000 ; i++){        // 'zero' a matriz dando pra ela o valor de -1
		for(int j=0; j<1000 ; j++ ){
			MatrizB[i][j]=-1; 
		}
	}
	

	FILE *arq;

	arq = fopen("/home/neto/N/USP/Codigos_Alg/Projeto_2018/base de dados/treino.txt", "r");
	int f=0;
	int g=0;
	// MANEIRA 2 acho q vai ser essa
	while (!feof(arq)){ // talvez tenha q ser um for(for m<nmero maximo de linhas) aqui, n sei se ele le o arquivo sempre q volta aqui, ou se ele le tudo de uma vez 
	
		fscanf(arq, "%lf", &MatrizB[f][g]);
		if(f != 0 || g != 0){
			if(MatrizB[f][0]<=2){
			if (inteiro_teste(MatrizB[f][g]) == 1){ // se o nmero for inteiro ele ja vai estar no fim da linha m, oq ta errado pq ele tem q estar no comeco do vetor, ja que inteiro significa novo vetor
				aux = MatrizB[f][g]; // guardo esse valor inteiro colocado errado
				MatrizB[f][g] = -1; // zero o valor nessa posiçao
				f++; // arrumo a linha
				g=0; // arrumo a coluna
				MatrizB[f][g] = aux; // ponho o valor no lugar certo
			}
		}
		else{

			if (inteiro_teste(MatrizB[f][g]) == 1 && MatrizB[f][g]>2){ // se o nmero for inteiro ele ja vai estar no fim da linha m, oq ta errado pq ele tem q estar no comeco do vetor, ja que inteiro significa novo vetor
				aux = MatrizB[f][g]; // guardo esse valor inteiro colocado errado
				MatrizB[f][g] = -1; // zero o valor nessa posiçao
				f++; // arrumo a linha
				g=0; // arrumo a coluna
				MatrizB[f][g] = aux; // ponho o valor no lugar certo
			}

		}
		}
	      
			g++;
		
	
		}	

		fclose(arq);

		

}



int main(){

	LerTeste();
	printf("%lf\n",MatrizA[965][0] );

	LerTreino();
	printf("%lf\n",MatrizB[242][0] );

for(int i=0;i<1500;i++){
		for(int j=0;j<1500;j++){
			k[i][j]=-1;
		}
	}


	
	for(int i=0;i<1500;i++){
		for(int j=0;j<1500;j++){
			kmov[i][j]=-1;
		}
	}

	dtw();
	//printf("%lf\n",DTW[2][5] );

	
	//printf("k %lf\nkmov %d\n",k[2][5],kmov[45][85] );
	printf("k[%d][%d]=%lf\n",27,35,k[27][35] );
				printf("k2[%d][%d]=%lf\n\n",27,36,k[27][36] );
				printf("k[%d][%d]=%lf\n",27,37,k[27][37] );
				printf("k2[%d][%d]=%lf\n\n",27,38,k[27][38] );

	ordenar_classificar();

	printf("k %lf\nkmov %d\n",k[2][5],kmov[45][85] );


	return 0;
}










// Se tiver dando algo errado e vc nao sabe o pq, talvez seja na leitura do treino, acho q ta certo
// mas talvez esteja errado o parametro para ele comecar a ignorar os inteiros 0,1 e 2 que aparecem
// no meio das séries que vc tinha cversado cm o barney la, se tiver dando muito ruim da uma conferida nisso
